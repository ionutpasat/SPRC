/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */

#include "tema1.h"
#include "token.h"

unordered_map<string, vector<string>> users; 

char **
request_authorization_1_svc(char **argp, struct svc_req *rqstp)
{
	static char * result;
	string userId = string(*argp);
	cout << "BEGIN " << userId << " AUTHZ" << endl;
	if (find(userIds.begin(), userIds.end(), userId) != userIds.end()) {
		result = generate_access_token(*argp);
		string req_token = string(*(&result));
		users[userId].push_back(req_token);
	}
	else {
		result = (char *) USER_NOT_FOUND;
		return &result;
	}


	return &result;
}

struct request_access_response *
request_access_token_1_svc(struct request_access_arg *argp, struct svc_req *rqstp)
{
	static struct request_access_response result;

	

	return &result;
}

struct validate_action_response *
validate_delegated_action_1_svc(struct validate_action_arg *argp, struct svc_req *rqstp)
{
	static struct validate_action_response  result;

	/*
	 * insert server code here
	 */

	return &result;
}

struct approve_request_response *
approve_request_token_1_svc(char **argp, struct svc_req *rqstp)
{
	static struct approve_request_response  result;

	if (!approvals.at(index).empty()) {
		result.with_sign = 1;
		cout << "RequestToken = " << *argp << endl;
	} else {
		result.with_sign = 0;
	}
	result.request_token = *argp;

	return &result;
}
